CSE110* Computer Science College Seminar* Methods and techniques students can adopt to promote their perseverance and success at the college in general and in the Computer Science and Information Technology fields in particular. Specific topics include college procedures and resources, academic advisement, time management, goal-setting, test and note taking, health issues and other areas related to student success in a computer related fields in college. Students are expected to enroll in this class in their first semester. No prerequisites. Offered on: A / 1 cr. hr.* 1.0* 2559* S459* 978-0-12-546090-3* 
CSE118* Fundamentals of Programming* An introductory programming course for the Computer Science major. Topics include basic computer and programming concepts such as hardware, software, numbering systems, Identifiers, variables, constants, data types, and operations, standard input and output, selections, loops, functions and methods, single and multidimensional arrays, and objects and classes. The course consists of 100-minute face-to-face lecture and 100-minute instructor-led lab each week for 15 weeks. Weekly homework programming projects and a final project of at least 100 lines of source code are expected. (2 hrs. lecture, 2 hrs. laboratory) Prerequisite: MAT111 or higher. Corequisite: MAT124 or higher. Offered on: A / 3 cr. hrs.* 3.0* 2560* R460* 978-0-12-403980-3* 
CSE148* Object-Oriented Programming* An intermediate programming course for the Computer Science major. Topics include class abstraction and encapsulation, inheritance and polymorphism, exception handling and text IO, abstract classes and interfaces, graphical user interface, event-driven programming, binary I/0, and recursion. The course consists of 200-minute face-to-face lecture with some instructor-led lab practice each week. Weekly programming homework projects and a final project of at least 500 lines of source code are required. Prerequisites: MAT124 or higher, CSE118 with a C or higher. Offered on: A / 4 cr. hrs.* 4.0* 2561* S461* 978-0-12-360601-3* 
CSE218* Data Structures and Algorithms* An extension of programming methodology to cover data storage and manipulation on complex data sets. Topics include: programming and applications of data structures; stacks, queues, lists, binary trees, heaps, priority queues, balanced trees and graphs. Recursive programming is heavily utilized. Fundamental sorting and searching algorithms are examined along with informal efficiency comparisons. Students expected to be proficient with a professional IDE for coding and debugging. The course consists of 100-minute face-to-face lecture and 100-minute instructor-led lab each week. (2 hrs. lecture, 2 hrs. laboratory) Prerequisite: CSE148 with a C or higher. Offered on: A / 3 cr. hrs.* 3.0* 2562* R462* 978-0-12-812624-0* 
CSE222* Computer Architecture and Organization* This course covers fundamentals of computer architecture and organization. Topics include classical von Neumann machine, major functional units, primary memory, representations of numerical (integer and floating point) and non-numerical data, CPU architecture, instruction encoding, fetch, decode, and execute cycle, instruction formats, addressing modes, symbolic assembler, assembly language programming, handling of subprogram calls at assembly level, mapping between high level language patterns and assembly/machine language, interrupts and I/0 operations, virtual memory management, and data access from a magnetic disk. A number of other programming topics such C programming language constructs (control and data structures, pointers, arrays and functions) and their relationship to the underlying architecture are introduced. Instructor-led laboratory work involves programming and debugging using machine language, assembly language and C. (2 hrs. lecture, 2 hrs. laboratory) Prerequisite: CSE148 with a C or higher. Offered on: A / 3 cr. hrs* 3.0* 2563* B463* 978-0-12-409545-8* 
CSE248* Advanced Object-Oriented Programming* Development of the basic concepts and techniques learned in CSE148 and CSE218 into practical programming skills that include a systematic approach to program design, coding, testing, and debugging. Application of these skills to the construction of robust programs of 1000 to 2000 lines of source code. Use of programming environments and tools to aid in the software development process. The course consists of 100-minute face-to-face lecture and 100-minute instructorÂ­led lab each week. (2 hrs. lecture, 2 hrs. laboratory) Prerequisite: CSE218 with a C or higher. Offered on: A / 3 cr. hrs.* 3.0* 2564* B464* 978-0-407-00196-1* 
